#include<iostream>
#include<list>

using namespace std;

class Graph
{
    public:
        Graph(int _size) : mSize(_size)
        {
            mAdj = new list<int>[mSize];
        }
        virtual ~Graph() {}

        void addEge(const char source, const char dest)
        {
            mAdj[int].push_back(dest);
        }

        void printG()
        {
            for (int i = 0; i < mSize; i++)
            {
                std::cout << "i = " << i << std::endl;
                for(list<int>::iterator itr = mAdj[i].begin(); itr != mAdj[i].end(); itr++)
                    std::cout <<  *itr << " ";
                std::cout << std::endl;
            }
        }
    private:
        list<int> *mAdj;
        int     mSize;
};
int main()
{
    Graph<int> g(5);

    return 0;
}
